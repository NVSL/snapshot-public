# -*- mode: makefile; -*-

## Rules:
## - Lines starting with '#' are ignored
## - Blank lines are ignored
## - Lines are formated as key=<y|n> with no space
##
## Working:
## - Flags are available in C++ source code if '=y', example:
##     #ifdef ENABLED_FLAG_EXAMPLE
##         printf("ENABLED_FLAG_EXAMPLE is available\n");
##     #endif

# Configure which log format to use
#
# 1. LOG_FORMAT_VOLATILE would keep two lists for the log, a volatile list for
# tracking just the addresses and the size of the modified data and a second log
# in the non-volatile memory that keeps the complete record (addr, size and
# data)
#
# 2. LOG_FORMAT_NON_VOLATILE would only keep the non-volatile copy
#
# NOTE: Only one of the flags should be enabled at a time
LOG_FORMAT_VOLATILE=y
LOG_FORMAT_NON_VOLATILE=n

# [Internal]
CXLBUF_TESTING_GOODIES=n

# Align nt-stores used for copying data to the backing file.
#
# WARN: Use aligned NT-stores only if the multiple threads are not working on
# unaligned neighboring data. msync() call from a different threads on
# neighboring memory regions *may* persist each other's state.
CXLBUF_ALIGN_SNAPSHOT_WRITES=n

# Generate a stacktrace for every call to msync
TRACE_LOG_MSYNC=n

# [Unsupported] Spawn a background thread to flush the updates 
USE_BGFLUSH=n

# [Unsupported] libvram uses vulkan to allocate memory from GPU over PCIe
# instead of pmem
ENABLE_LIBVRAM=n

# Disable all persist operations, non crash-consistent, no data is copied to the
# backing file. Msync is a nop.
NO_PERSIST_OPS=n

# Return from checkMemory call without doing anything. Msync is a nop. No data
# is copied to the backing file.
NO_CHECK_MEMORY=n
