#!/usr/bin/env python

"""
@brief  Wrapper to invoke llvm pass using clang
@author Suyash Mahar <contact@suyashmahar.com>
"""

from os.path import basename
import subprocess
import sys
import os

PASS_SO = ""
if 'DCLANG_LIBS_DIR' in os.environ:
    PASS_SO = f'{os.environ["DCLANG_LIBS_DIR"]}/libstoreinstpass.so'
else:
    raise RuntimeError("DCLANG_LIBS_DIR not set")

def get_bins(llvm_dir):
    cxx = os.path.join(llvm_dir, "bin/clang++")
    cc = os.path.join(llvm_dir, "bin/clang")

    return cc, cxx


def main(fname):
    if 'LLVM_DIR' not in os.environ:
        raise RuntimeError("LLVM_DIR env not set.")

    llvm_dir = os.environ['LLVM_DIR']

    cc, cxx = get_bins(llvm_dir)

    target = cc

    # Check if invoking for clang or clang++
    if fname.endswith('++'):
        target = cxx

    args = sys.argv[1:]
    pass_args = ['-frecord-command-line']

    if 'DCLANG_LIBS_DIR' in os.environ:
        libs_dir = os.environ['DCLANG_LIBS_DIR']

        pass_args += ['-L' + libs_dir]
        pass_args += ['-Wl,-rpath=' + libs_dir]

    if 'DISABLE_PASS' not in os.environ:
        pass_args += ['-fexperimental-new-pass-manager',
                      '-fpass-plugin=' + PASS_SO,
                      '-ldl',
                      '-Wno-unused-command-line-argument']
    if 'DCLANG_DONT_LINK' not in os.environ:
        pass_args += ['-ldl',
                      '-lstoreinst']
    else:
        pass_args += []

    cmd = [target] + pass_args + args
        
    if 'V' in os.environ:
        print("----")
        print(" ".join(cmd))
        print("----")
        
    ret = subprocess.call(cmd)
    sys.exit(ret)


if __name__ == "__main__":
    main(basename(sys.argv[0]))
